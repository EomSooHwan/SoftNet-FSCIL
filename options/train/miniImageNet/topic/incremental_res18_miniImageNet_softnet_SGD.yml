#################
# General Setting
#################
# Experiment name, if the experiment name has the word debug, it will enter debug mode
name: NCM_res18_miniImageNet_K3_CS_hardnet0.70_5shots_60bases

# The type of model used, usually the class name of the model defined in the `methods` directory
model_type: WSNBaseTopicModel
subnet_type: hardnet
# gpu
gpu: 0
# Random seed
manual_seed: 1997
use_cosine: true
Random: false
details: true

#################################
# The settings for the dataset and data loader
#################################
transformer_agu:
  - type: RandomResizedCrop
    size: 84
  - type: RandomHorizontalFlip
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [0.485, 0.456, 0.406]
    std: !!python/tuple [0.229, 0.224, 0.225]

transformer:
  - type: Resize
    size: 92
  - type: CenterCrop
    size: 84
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [ 0.485, 0.456, 0.406 ]
    std: !!python/tuple [ 0.229, 0.224, 0.225 ]

datasets:
  # The important information of dataset
  train:
    name: mini_imagenet
    type: NormalDataset
    total_classes: 100
    dataroot: ./DataSet/FSIL_miniImageNet
    aug: true
    pre_load: false
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    # Batch size
    batch_size: 120
    pin_memory: true

    sampler:
      type: TaskSampler
      num_samples: 5

  val:
    name: mini_imagenet
    type: NormalDataset
    total_classes: 100
    dataroot: ./DataSet/FSIL_miniImageNet
    aug: false
    pre_load: false
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    sampler:
      type: ~

  test:
    name: miniImageNet
    type: NormalDataset
    total_classes: 100
    dataroot: ./DataSet/FSIL_miniImageNet
    aug: false
    pre_load: true
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    sampler:
      type: ~

#####################
# The following is the setup of the network structure
#####################
network_g:
  type: SigResnet18_small_v1
  num_classes: 100
  adopt_classifier: true
  flatten: true
  sparsity: 0.3
  gamma: 1.0
  conv1_kernel: 3

finetune_layer: layer4.1

######################################
# The following are the paths
######################################
path:
  # Base model path, need models ending in pth
  pretrain_model_g: ~
  pretrain_prototypes: ~

  # hardnet-baseline
  base_model: ./exp/mini_imagenet_bases60/FSIL_CFRPModel_res18_miniImageNet_K3_HardNet0.70_60bases/models/best_net_latest.pth

  base_subnet_model: ./exp/mini_imagenet_bases60/FSIL_CFRPModel_res18_miniImageNet_K3_HardNet0.70_60bases/models/best_net_subnet0_latest.pth

  strict_load: false

#################
# The following is the training setup
#################
train:
  # Optimizer
  optim_g:
    # The type of optimizer
    type: SGD
    ##### The following properties are flexible and have different settings depending on the optimizer
    # learning rate
    lr: !!float 2e-3
    weight_decay: !!float 5e-4
    # momentum
    momentum: !!float 0.9

  # The setting of scheduler
  scheduler:
    # The type of scheduler
    type: MultiStepLR
    #### The following properties are flexible, depending on the learning rate Scheduler has different settings
    #
    # milestones, using epoch to represent the points to decay the learning rate
    milestones: [50, 70]

    # gama
    gamma: !!float 1e-1


  # whether fine_tune
  fine_tune: true
  # The number of epoch
  fine_tune_epoch: 15

  # The threshold of model parameters to fix the layers of model
  threshold: 0.4
  # The number of warm up iteration, if -1, means no warm up
  warmup_iter: -1  # no warm up
  # number of base classes
  bases: 60
  # number of tasks for incremental few-shot learning
  tasks: 9
  # number of shots for incremental few-shot learning
  shots: 5
  # number of ways for incremental few-shot learning
  way: 5
  # load previously learned prototypes 
  novel_exemplars: 0
  # number of tests for incremental few-shot learning
  num_test: 1
  # losses
  cpn_opt:
    type: IncrementalKPTFixPNLoss
    w: 1.0
    omega: 1.0
    n_shots: 5
    use_cosine: true


#######################
# The following are the settings for Validation
#######################
val:
  # The frequency of validation
  val_freq: 100
  test_type: NCM
  p_norm: false

####################
# The following are the settings for Logging
####################
logger:
  # Frequency of loggers printed on the screen according to iteration
  print_freq: 25
  # Whether to use tensorboard logger

  use_tb_logger: true
  # Whether to use wandb logger
  wandb:
    # The default is None, i.e. wandb is not used.
    project: FSIL-TOPIC-miniImage-5shots-60bases
    # If it is resume, you can enter the last wandb id, then the log can be connected
    resume_id: ~

