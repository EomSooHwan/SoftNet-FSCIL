#################
# General Setting
#################
# Experiment name, if the experiment name has the word debug, it will enter debug mode
name: FSIL_CFRPModel_res18_ImageNet_nontanh_lr1e-1_WSN0.99_mile31_61
# The type of model used, usually the class name of the model defined in the `methods` directory
model_type: WSNBaseModel
# gpu
gpu: 0
# Random seed
manual_seed: 1997
Random: false

#################################
# The settings for the dataset and data loader
#################################
transformer_agu:
  - type: RandomResizedCrop
    size: 224
  - type: RandomHorizontalFlip
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [0.485, 0.456, 0.406]
    std: !!python/tuple [0.229, 0.224, 0.225]

transformer:
  - type: Resize
    size: 256
  - type: CenterCrop
    size: 224
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [0.485, 0.456, 0.406]
    std: !!python/tuple [0.229, 0.224, 0.225]

datasets:
  # The important information of dataset
  train:
    name: miniImageNet
    type: NormalDataset
    total_classes: 1000
    dataroot: ./DataSet/ImageNet/train
    aug: true
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    # Batch size
    batch_size_base_classes: 256
    pin_memory: true
    pre_load: false
    sampler:
      type: ~

  val:
    name: miniImageNet
    type: NormalDataset
    total_classes: 1000
    dataroot: ./DataSet/ImageNet/val
    aug: false
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    pin_memory: true
    pre_load: false

    sampler:
      type: ~

#####################
# The following is the setup of the network structure
#####################
network_g:
  type: SigResnet18_small 
  num_classes: 1000
  adopt_classifier: true
  flatten: true
  sparsity: 0.01
  gamma: 1.0 


######################################
# The following are the paths
######################################
path:
  # Pre-trained model path, need models ending in pth
  #pretrain_model_g: ./exp/miniImageNet_bases1000/FSIL_CFRPModel_res18_ImageNet_v1_WSN_gamma1.0_c0.01_mile3_61_epoch90/models/best_net_latest.pth
  pretrain_model_g: ~
  # Whether to load pretrained models strictly, that is the corresponding parameter names should be the same
  strict_load: true
  #
  resume_state: ~

#################
# The following is the training setup
#################
train:
  # Optimizer
  optim_g:
    # The type of optimizer
    type: iSGD
    ##### The following properties are flexible and have different settings depending on the optimizer
    # learning rate
    lr: !!float 1e-1
    weight_decay: !!float 5e-4
    # momentum
    momentum: !!float 0.9

  optim_d:
    # The type of optimizer
    type: iSGD
    # learning rate
    lr: !!float 1e-1
    weight_decay: !!float 5e-4
    # momentum
    momentum: !!float 0.9

  # The setting of scheduler
  scheduler:
    # The type of scheduler
    type: MultiStepLR
    #### The following properties are flexible, depending on the learning rate Scheduler has different settings
    # milestones [31, 61]
    milestones: [ !!python/object/apply:eval [ 31 * 5000 ],
                  !!python/object/apply:eval [ 61 * 5000 ]]
    # gama
    gamma: 0.1 #0.1

  # The number of epoch
  epoch: 90
  s_epoch: 100 # start smoothing
  # The number of warm up iteration, if -1, means no warm up
  warmup_iter: -1  # no warm up
  # number of base classes
  bases: 1000
  # number of tasks for incremental few-shot learning
  tasks: 9

#######################
# The following are the settings for Validation
#######################
val:
  # The frequency of validation
  val_freq: 1500

####################
# The following are the settings for Logging
####################
logger:
  # Frequency of loggers printed on the screen according to iteration
  print_freq: 20
  # 保存checkpoint的频率
  save_checkpoint_freq: 50000
  # Whether to use tensorboard logger

  use_tb_logger: true
  # Whether to use wandb logger
  wandb:
    # The default is None, i.e. wandb is not used.
    project: FSIL-Noise-miniImageNet-60bases
    # If it is resume, you can enter the last wandb id, then the log can be connected
    resume_id: ~

