#################
# General Setting
#################
# Experiment name, if the experiment name has the word debug, it will enter debug mode
name: NCM_CUB_layer4.1_CS_HardNet0.97_SGD_epoch600
#name: WSNModel_res18_cub_layer4_colorjitter_cosine_wsn0.90_aug0

# The type of model used, usually the class name of the model defined in the `methods` directory
model_type: WSNCubModel
# gpu
gpu: 0
# Random seed
manual_seed: 1997
use_cosine: false
Random: false
details: true

subnet_type: hardnet

#################################
# The settings for the dataset and data loader
#################################
transformer_agu:
  - type: RandomResizedCrop
    size: 224
  - type: ColorJitter
    brightness: 0.4
    contrast: 0.4
    saturation: 0.4
  - type: RandomHorizontalFlip
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [0.485, 0.456, 0.406]
    std: !!python/tuple [0.229, 0.224, 0.225]

transformer:
  - type: Resize
    size: 256
  - type: CenterCrop
    size: 224
  - type: ToTensor
  - type: Normalize
    mean: !!python/tuple [ 0.485, 0.456, 0.406 ]
    std: !!python/tuple [ 0.229, 0.224, 0.225 ]


datasets:
  # The important information of dataset
  train:
    name: cub
    type: NormalDataset
    total_classes: 200
    dataroot: DataSet/CUB_200_2011/train
    aug: true
    pre_load: false
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    # Batch size
    batch_size: ~
    pin_memory: true

    sampler:
      type: TaskSampler
      num_samples: 5

  val:
    name: cub
    type: NormalDataset
    total_classes: 200
    dataroot: DataSet/CUB_200_2011/test
    aug: false
    pre_load: false
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    p_norm: true
    sampler:
      type: ~

  test:
    name: cub
    type: NormalDataset
    total_classes: 200
    dataroot: DataSet/CUB_200_2011/test
    aug: false
    pre_load: false
    # Number of processes read by the data loader per GPU
    num_worker_per_gpu: 8
    sampler:
      type: ~

#####################
# The following is the setup of the network structure
#####################
network_g:
  type: SigResnet18_small_v2
  num_classes: 100
  adopt_classifier: true
  flatten: true
  sparsity: 0.03
  gamma: 1.0

finetune_layer: layer4.1
new_sparsity: 1.0

######################################
# The following are the paths
######################################
path:
  # Base model path, need models ending in pth
  #base_model: ./exp/cub_bases100/FSIL_CFRPModel_res18_CUB_SGD_colorjit_wsn0.86_lr2e-2_clr2e-2_TOPIC_AUGM/models/best_net_latest.pth
  #base_subnet_model: ./exp/cub_bases100/FSIL_CFRPModel_res18_CUB_SGD_colorjit_wsn0.86_lr2e-2_clr2e-2_TOPIC_AUGM/models/best_net_subnet0_latest.pth.npy

  #base_model: ./exp/cub_bases100/WSNModel_res18_cub_layer4_colorjitter_cosine_Hard0.88_n_lr1e-3_v1_topic_epoch_10_tau_0.03_met_w_0.7/models/best_net_latest.pth
  #base_subnet_model: ./exp/cub_bases100/WSNModel_res18_cub_layer4_colorjitter_cosine_Hard0.88_n_lr1e-3_v1_topic_epoch_10_tau_0.03_met_w_0.7/models/best_net_subnet0_latest.pth.npy

  base_model: ./exp/cub_bases100/FSIL_CFRPModel_res18_CUB_SGD_HardNet0.97_epoch600/models/best_net_latest.pth
  base_subnet_model: ./exp/cub_bases100/FSIL_CFRPModel_res18_CUB_SGD_HardNet0.97_epoch600/models/best_net_subnet0_latest.pth

  strict_load: true

#################
# The following is the training setup
#################
train:
  # Optimizer
  optim_g:
    # The type of optimizer
    type: SGD
    ##### The following properties are flexible and have different settings depending on the optimizer
    # learning rate
    lr: !!float 1e-3
    #weight_decay: !!float 5e-4
    # momentum
    #momentum: !!float 0.9

  # The setting of scheduler
  scheduler:
    # The type of scheduler
    type: MultiStepLR
    #### The following properties are flexible, depending on the learning rate Scheduler has different settings
    #
    # milestones, using epoch to represent the points to decay the learning rate
    milestones: [ !!python/object/apply:eval [ 11 * 1 ],
                  !!python/object/apply:eval [ 11 * 1 ]]

    # gama
    gamma: 0.1

  # whether fine_tune
  fine_tune: true
  # The number of epoch
  fine_tune_epoch: 10

  threshold: 0.15
  # The number of warm up iteration, if -1, means no warm up
  warmup_iter: -1  # no warm up
  # number of base classes
  bases: 100
  # number of tasks for incremental few-shot learning
  tasks: 11
  # number of shots for incremental few-shot learning
  shots: 5
  novel_exemplars: 5
  # number of tests for incremental few-shot learning
  num_test: 1

  cpn_opt:
    type: IncrementalKPTFixPNLoss
    w: 1.0
    omega: 1.0
    n_shots: 5
    use_cosine: true

#######################
# The following are the settings for Validation
#######################
val:
  # The frequency of validation
  val_freq: 2000
  test_type: NCM
  p_norm: ~

####################
# The following are the settings for Logging
####################
logger:
  # Frequency of loggers printed on the screen according to iteration
  print_freq: 2
  # Whether to use tensorboard logger

  use_tb_logger: true
  # Whether to use wandb logger
  wandb:
    # The default is None, i.e. wandb is not used.
    project: FSIL-TOPIC-CUB-5shots_100bases
    # If it is resume, you can enter the last wandb id, then the log can be connected
    resume_id: ~

